pipeline {
  agent {
    label 'helpdesk-awu-agent-02'
  }
  environment {
      PATH = "/opt/gradle/gradle-7.6/bin:/usr/local/lib/nodejs/node-v20.11.0-linux-x64/bin:$PATH"
  //     // Telegram configre
  //     TOKEN = credentials('telegramToken')
  //     CHAT_ID = credentials('telegramChatid')
  //     // Telegram Message Pre Build
  //     CURRENT_BUILD_NUMBER = "${currentBuild.number}"
  //     GIT_MESSAGE = sh(returnStdout: true, script: "git log -n 1 --format=%s ${GIT_COMMIT}").trim()
  //     GIT_AUTHOR = sh(returnStdout: true, script: "git log -n 1 --format=%ae ${GIT_COMMIT}").trim()
  //     GIT_COMMIT_SHORT = sh(returnStdout: true, script: "git rev-parse --short ${GIT_COMMIT}").trim()
  //     GIT_INFO = "Branch(Version): ${GIT_BRANCH}\nLast Message: ${GIT_MESSAGE}\nAuthor: ${GIT_AUTHOR}\nCommit: ${GIT_COMMIT_SHORT}"
  //     TEXT_BREAK = "--------------------------------------------------------------"
  //     TEXT_PRE_BUILD = "${TEXT_BREAK}\n${GIT_INFO}\n${JOB_NAME} -- On Build"
  //     // TEXT_PRE_BUILD = "${TEXT_BREAK}\n${GIT_INFO}\n${JOB_NAME} -- Please Approved Building @b_indrawan @mashumabduljabbar ü§ù ${BUILD_URL}console"
  //     // Telegram Message Success and Failure
  //     TEXT_SUCCESS_BUILD = "${JOB_NAME} Build SUCCESS"
  //     TEXT_FAILURE_BUILD = "${JOB_NAME} Build FAILURE"
  //     TEXT_ABORTED_BUILD = "${JOB_NAME} Build ABORTED"
  }
    // parameters {
    //   string(defaultValue: "lutfi.pratama@kelaspintar.id", description: 'git config user.email ', name: 'GIT_CONFIG_EMAIL')
    //   string(defaultValue: "Pratama", description: 'git config user.name', name: 'GIT_CONFIG_USERNAME')
    //   string(defaultValue: "master", description: 'git switch branch', name: 'GIT_BRANCH_TO_SWITCH')
    //   //string(defaultValue: "asia.gcr.io/sixth-well-341603/intranet-fe", description: 'put registry path for image ', name: 'Image_Registry_Path')
    //   string(defaultValue: "applications/kelaspintar/kp-auth/development/deployment.yaml", description: 'path of k8s manifestfiles', name: 'Manifest_Path')
    // }
    options { disableConcurrentBuilds(abortPrevious: true) }
    stages {
      stage('Git-clone'){
        steps{
          git branch: 'production', credentialsId: 'gitlab_user_pass', url: 'https://gitlab.kplabs.id/kp/mobile/kp-mobile.git'
        }
      }
      stage('check-nodejs-gradle-version'){
        steps{
          //archiveArtifacts "generated_apk/apk/staging/release/*.apk"
          sh "node -v"
          sh "npm version"
          sh "npx -v"
          sh "gradle --version"
        }
      }
      stage('copy-config'){
        steps{
          sh "cp .env-example .env"
          sh "cp .env-example .env.production"
        }
      }
      // stage('Notification') {
      //   steps {
      //     sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_PRE_BUILD}' --form chat_id='${CHAT_ID}'"
      //   }
      // }
      // stage('remove-old-aab'){
      //   steps{
      //     archiveArtifacts "generated_apk/apk/staging/release/*.apk"
      //     sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Production/Deploy/android/app/build/outputs/bundle/productionRelease"
      //   }
      // }
      stage('Build-aab'){
        steps{
          echo "PATH is: $PATH"
          sh "make install"
          sh "make aab"
        }
      }
      // stage('uploads-storage'){
      //   steps{
      //     sh "gsutil -m rsync -r /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Staging/Deploy/generated_apk/apk/staging/release gs://lptv2_api_staging_bucket/apk-staging/release"
      //     sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Staging/Deploy/generated_apk/apk/staging/release/*"
      //   }
      // }
      stage('Publish-aab'){
        steps{
          archiveArtifacts "android/app/build/outputs/bundle/productionRelease/*.aab"
          //sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Production/*"
        }
      }
      stage('Build-apk'){
        steps{
          sh "make apk_debug"
        }
      }
      // stage('uploads-storage'){
      //   steps{
      //     sh "gsutil -m rsync -r /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Staging/Deploy/generated_apk/apk/staging/release gs://lptv2_api_staging_bucket/apk-staging/release"
      //     sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Staging/Deploy/generated_apk/apk/staging/release/*"
      //   }
      // }
      stage('Publish-apk'){
        steps{
          archiveArtifacts "generated_apk/apk/production/debug/*.apk" // upload prod artifacts
          //sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Production/*"
        }
      }
      // stage('Remove-Old-Build'){
      //   steps{
      //     //archiveArtifacts "android/app/build/outputs/bundle/productionRelease/*.aab"
      //     sh "rm -rf /var/lib/jenkins/workspace-agent/workspace/KelasPintarRevamp/KPMobile/Production"
      //   }
      // }
    //   stage('Build Docker image'){
    //     steps{
    //       sh "docker build --no-cache -t asia.gcr.io/kp-dev-348406/kp-auth:dev-${BUILD_NUMBER} -f Dockerfile ."
    //     }
    //   }
    //   stage('Docker push to Container Registry'){
    //     steps{
    //       sh "gcloud auth configure-docker asia.gcr.io --quiet"
    //       sh "docker push asia.gcr.io/kp-dev-348406/kp-auth:dev-${BUILD_NUMBER}"
    //     }
    //   }
    //   stage('Git Clone for the kubeconfig code'){
    //     steps {
    //       git branch: 'master', credentialsId: 'gitlab_user_pass', url: 'https://gitlab.kplabs.id/kp/infrastructure/kube-config.git'
    //     }
    //   }
    //   stage('Update GIT') {
    //     steps{
    //       script{
    //         catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
    //           withCredentials([usernamePassword(credentialsId: 'gitlab_user_pass', passwordVariable: 'git_password', usernameVariable: 'git_username')]){
    //             sh "git config user.email '${GIT_CONFIG_EMAIL}' "
    //             sh "git config user.name '${GIT_CONFIG_USERNAME}' "
    //             sh "cat '${Manifest_Path}' "
    //             sh "sed -i 's+asia.gcr.io/kp-dev-348406/kp-auth.*+asia.gcr.io/kp-dev-348406/kp-auth:dev-${BUILD_NUMBER}+g' ${Manifest_Path} "
    //             sh "cat '${Manifest_Path}' "
    //             sh "git add '${Manifest_Path}' "
    //             sh "git commit -m 'Done by Jenkins Job changemanifest dev-${env.BUILD_NUMBER} kp-auth'"
    //             sh "git push https://$git_username:'$git_password'@gitlab.kplabs.id/kp/infrastructure/kube-config.git HEAD:'${GIT_BRANCH_TO_SWITCH}'"
    //           }
    //         }
    //       }
    //     }
    //   }
    }
    // post {
    //   success {
    //     script{
    //       sh('curl --location --request POST https://api.telegram.org/bot${TOKEN}/sendMessage --form text=${TEXT_SUCCESS_BUILD} --form chat_id=${CHAT_ID}')
    //     }
    //   }
    //   failure {
    //     script{
    //       //sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_FAILURE_BUILD}' --form chat_id='${CHAT_ID}'"
    //       sh('curl --location --request POST https://api.telegram.org/bot${TOKEN}/sendMessage --form text=${TEXT_FAILURE_BUILD} --form chat_id=${CHAT_ID}')
    //     }
    //   }
    //   aborted {
    //     script{
    //       //sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_ABORTED_BUILD}' --form chat_id='${CHAT_ID}'"
    //       sh('curl --location --request POST https://api.telegram.org/bot${TOKEN}/sendMessage --form text=${TEXT_ABORTED_BUILD} --form chat_id=${CHAT_ID}')
    //     }
    //   }
    // }
}